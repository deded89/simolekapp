<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

    class Progress extends CI_Controller
    {
      function __construct()
      {
        parent::__construct();
        $this->load->model('pengadaan/Progress_model');
        $this->load->library('form_validation');
        if (!$this->ion_auth->logged_in())
        {
          redirect('auth/login', 'refresh');
        }else if (!$this->ion_auth->in_group('admin')) {
          return show_error('You must be an admin to view this page.');
        }
      }


      // index for admin only
      public function index()
      {
        $progress = $this->Progress_model->get_all();

        $data = array(
          'progress_data' => $progress,
          'controller' => 'Progress',
          'uri1' => 'List Progress',
          'main_view' => 'pengadaan/progress/progress_list'
        );

        $this->load->view('template_view', $data);
      }

      public function read($id)
      {
        $row = $this->Progress_model->get_by_id($id);
        if ($row) {
          $data = array(
            'controller' => 'Progress',
            'uri1' => 'Data Progress',
            'main_view' => 'pengadaan/progress/progress_read',

            'id' => $row->id,
            'nama' => $row->nama,
          );
          $this->load->view('template_view', $data);
        } else {
          $this->session->set_flashdata('message', 'Data Tidak Ditemukan');
          redirect(site_url('progress'));
        }
      }

      public function create()
      {
        $data = array(
          'button' => 'Simpan',
          'action' => site_url('pengadaan/progress/create_action'),
          'controller' => 'Progress',
          'uri1' => 'Tambah Progress',
          'main_view' => 'pengadaan/progress/progress_form',

          'id' => set_value('id'),
          'nama' => set_value('nama'),
        );
        $this->load->view('template_view', $data);
      }

      public function create_action()
      {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
          $this->create();
        } else {
          $data = array(
            'nama' => $this->input->post('nama',TRUE),
          );

          $this->Progress_model->insert($data);
          $this->session->set_flashdata('message', 'Data Berhasil Ditambahkan');
          redirect(site_url('pengadaan/progress'));
        }
      }

      public function update($id)
      {
        $row = $this->Progress_model->get_by_id($id);

        if ($row) {
          $data = array(
            'button' => 'Update',
            'action' => site_url('pengadaan/progress/update_action'),
            'controller' => 'pengadaan/progress',
            'uri1' => 'Update Progress',
            'main_view' => 'pengadaan/progress/progress_form',

            'id' => set_value('id', $row->id),
            'nama' => set_value('nama', $row->nama),
          );
          $this->load->view('template_view', $data);
        } else {
          $this->session->set_flashdata('message', 'Data Tidak Ditemukan');
          redirect(site_url('pengadaan/progress'));
        }
      }

      public function update_action()
      {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
          $this->update($this->input->post('id', TRUE));
        } else {
          $data = array(
            'nama' => $this->input->post('nama',TRUE),
          );

          $this->Progress_model->update($this->input->post('id', TRUE), $data);
          $this->session->set_flashdata('message', 'Update Data Berhasil');
          redirect(site_url('pengadaan/progress'));
        }
      }

      public function delete($id)
      {
        $row = $this->Progress_model->get_by_id($id);

        if ($row) {
          $this->Progress_model->delete($id);
          $this->session->set_flashdata('message', 'Data Berhasil Dihapus');
          redirect(site_url('pengadaan/progress'));
        } else {
          $this->session->set_flashdata('message', 'Data Tidak Ditemukan');
          redirect(site_url('pengadaan/progress'));
        }
      }

      public function _rules()
      {
        $this->form_validation->set_rules('nama', 'nama', 'trim|required');

        $this->form_validation->set_rules('id', 'id', 'trim');
        $this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
      }

    }

/* End of file Progress.php */
/* Location: ./application/controllers/Progress.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2019-05-27 13:30:46 */
/* http://harviacode.com */
?>
